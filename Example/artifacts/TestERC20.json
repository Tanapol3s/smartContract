{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_616": {
					"entryPoint": null,
					"id": 616,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_contract$_IERC20_$77_fromMemory": {
					"entryPoint": 120,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
					"entryPoint": 141,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 186,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_IERC20_$77": {
					"entryPoint": 204,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 222,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 254,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_IERC20_$77": {
					"entryPoint": 259,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1392:4",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "83:93:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "93:22:4",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "108:6:4"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "102:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "102:13:4"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "93:5:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "164:5:4"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_IERC20_$77",
													"nodeType": "YulIdentifier",
													"src": "124:39:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "124:46:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "124:46:4"
										}
									]
								},
								"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "61:6:4",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "69:3:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "77:5:4",
										"type": ""
									}
								],
								"src": "7:169:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "272:287:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "318:83:4",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "320:77:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "320:79:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "320:79:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "293:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "302:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "289:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "289:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "314:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "285:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "285:32:4"
											},
											"nodeType": "YulIf",
											"src": "282:119:4"
										},
										{
											"nodeType": "YulBlock",
											"src": "411:141:4",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "426:15:4",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "440:1:4",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "430:6:4",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "455:87:4",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "525:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:22:4"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "534:7:4"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "465:44:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "465:77:4"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "455:6:4"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "242:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "253:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "265:6:4",
										"type": ""
									}
								],
								"src": "182:377:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "605:35:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "615:19:4",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "631:2:4",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "625:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "625:9:4"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "615:6:4"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "598:6:4",
										"type": ""
									}
								],
								"src": "565:75:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "691:51:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "701:35:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "730:5:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "712:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "712:24:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "701:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "673:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "683:7:4",
										"type": ""
									}
								],
								"src": "646:96:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "806:51:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "816:35:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "845:5:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "827:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "827:24:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "816:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_IERC20_$77",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "788:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "798:7:4",
										"type": ""
									}
								],
								"src": "748:109:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "908:81:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "918:65:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "933:5:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "940:42:4",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "929:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "929:54:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "918:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "890:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "900:7:4",
										"type": ""
									}
								],
								"src": "863:126:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1084:28:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1101:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1104:1:4",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1094:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1094:12:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1094:12:4"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "995:117:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1207:28:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1224:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1227:1:4",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1217:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1217:12:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1217:12:4"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "1118:117:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1297:92:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1367:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1376:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1379:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1369:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "1369:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1369:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1320:5:4"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1358:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_IERC20_$77",
																	"nodeType": "YulIdentifier",
																	"src": "1327:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:37:4"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1317:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1317:48:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1310:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1310:56:4"
											},
											"nodeType": "YulIf",
											"src": "1307:76:4"
										}
									]
								},
								"name": "validator_revert_t_contract$_IERC20_$77",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1290:5:4",
										"type": ""
									}
								],
								"src": "1241:148:4"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 4,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506040516104e63803806104e68339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b60008151905061008781610103565b92915050565b6000602082840312156100a3576100a26100fe565b5b60006100b184828501610078565b91505092915050565b60006100c5826100de565b9050919050565b60006100d7826100ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61010c816100cc565b811461011757600080fd5b50565b6103bd806101296000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632762efb51461003b5780638a4068dd14610059575b600080fd5b610043610063565b60405161005091906102df565b60405180910390f35b610061610114565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100bf919061028d565b60206040518083038186803b1580156100d757600080fd5b505afa1580156100eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010f9190610233565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33734b20993bc481177ec7e8f571cecae8a9e22c02db6127106040518463ffffffff1660e01b8152600401610187939291906102a8565b602060405180830381600087803b1580156101a157600080fd5b505af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d99190610206565b50565b6000815190506101eb81610359565b92915050565b60008151905061020081610370565b92915050565b60006020828403121561021c5761021b610354565b5b600061022a848285016101dc565b91505092915050565b60006020828403121561024957610248610354565b5b6000610257848285016101f1565b91505092915050565b610269816102fa565b82525050565b61027881610342565b82525050565b61028781610338565b82525050565b60006020820190506102a26000830184610260565b92915050565b60006060820190506102bd6000830186610260565b6102ca6020830185610260565b6102d7604083018461026f565b949350505050565b60006020820190506102f4600083018461027e565b92915050565b600061030582610318565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061034d82610338565b9050919050565b600080fd5b6103628161030c565b811461036d57600080fd5b50565b61037981610338565b811461038457600080fd5b5056fea264697066735822122039a311c6a85ad9224ede5ac5398ac8c874598b86b9632715f698914060f6ffb164736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4E6 CODESIZE SUB DUP1 PUSH2 0x4E6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BD DUP1 PUSH2 0x129 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2762EFB5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH2 0x2710 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x206 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x354 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP5 DUP3 DUP6 ADD PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x354 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x287 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x362 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LOG3 GT 0xC6 0xA8 GAS 0xD9 0x22 0x4E 0xDE GAS 0xC5 CODECOPY DUP11 0xC8 0xC8 PUSH21 0x598B86B9632715F698914060F6FFB164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "182:335:3:-:0;;;226:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;269:5;262:4;;:12;;;;;;;;;;;;;;;;;;226:55;182:335;;7:169:4;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;7:169;;;;:::o;182:377::-;265:6;314:2;302:9;293:7;289:23;285:32;282:119;;;320:79;;:::i;:::-;282:119;440:1;465:77;534:7;525:6;514:9;510:22;465:77;:::i;:::-;455:87;;411:141;182:377;;;;:::o;646:96::-;683:7;712:24;730:5;712:24;:::i;:::-;701:35;;646:96;;;:::o;748:109::-;798:7;827:24;845:5;827:24;:::i;:::-;816:35;;748:109;;;:::o;863:126::-;900:7;940:42;933:5;929:54;918:65;;863:126;;;:::o;1118:117::-;1227:1;1224;1217:12;1241:148;1327:37;1358:5;1327:37;:::i;:::-;1320:5;1317:48;1307:76;;1379:1;1376;1369:12;1307:76;1241:148;:::o;182:335:3:-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@getCoin_630": {
					"entryPoint": 99,
					"id": 630,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@transfer_643": {
					"entryPoint": 276,
					"id": 643,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_bool_fromMemory": {
					"entryPoint": 476,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256_fromMemory": {
					"entryPoint": 497,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool_fromMemory": {
					"entryPoint": 518,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256_fromMemory": {
					"entryPoint": 563,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 608,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_rational_10000_by_1_to_t_uint256_fromStack": {
					"entryPoint": 623,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 638,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 653,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 680,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 735,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 762,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 780,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 792,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 824,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_rational_10000_by_1_to_t_uint256": {
					"entryPoint": 834,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 852,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_bool": {
					"entryPoint": 857,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 880,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3462:4",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "67:77:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "77:22:4",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "92:6:4"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "86:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "86:13:4"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "77:5:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "132:5:4"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "108:23:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "108:30:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "108:30:4"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "45:6:4",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "53:3:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "61:5:4",
										"type": ""
									}
								],
								"src": "7:137:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "213:80:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "223:22:4",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "238:6:4"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "232:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "232:13:4"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "223:5:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "281:5:4"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "254:26:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "254:33:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "254:33:4"
										}
									]
								},
								"name": "abi_decode_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "191:6:4",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "199:3:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "207:5:4",
										"type": ""
									}
								],
								"src": "150:143:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "373:271:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "419:83:4",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "421:77:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "421:79:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "421:79:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "394:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "403:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "390:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "390:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "415:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "386:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "386:32:4"
											},
											"nodeType": "YulIf",
											"src": "383:119:4"
										},
										{
											"nodeType": "YulBlock",
											"src": "512:125:4",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "527:15:4",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "541:1:4",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "531:6:4",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "556:71:4",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "599:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "610:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "595:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:22:4"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "619:7:4"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "566:28:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "566:61:4"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "556:6:4"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "343:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "354:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "366:6:4",
										"type": ""
									}
								],
								"src": "299:345:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "727:274:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "773:83:4",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "775:77:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "775:79:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "775:79:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "748:7:4"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "757:9:4"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "744:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "744:23:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "769:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "740:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "740:32:4"
											},
											"nodeType": "YulIf",
											"src": "737:119:4"
										},
										{
											"nodeType": "YulBlock",
											"src": "866:128:4",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "881:15:4",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "895:1:4",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "885:6:4",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "910:74:4",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "956:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "967:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:22:4"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "976:7:4"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "920:31:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "920:64:4"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "910:6:4"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "697:9:4",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "708:7:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "720:6:4",
										"type": ""
									}
								],
								"src": "650:351:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1072:53:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1089:3:4"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1112:5:4"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "1094:17:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1094:24:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1082:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1082:37:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1082:37:4"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1060:5:4",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1067:3:4",
										"type": ""
									}
								],
								"src": "1007:118:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1208:78:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1225:3:4"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1273:5:4"
															}
														],
														"functionName": {
															"name": "convert_t_rational_10000_by_1_to_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1230:42:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1230:49:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1218:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1218:62:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1218:62:4"
										}
									]
								},
								"name": "abi_encode_t_rational_10000_by_1_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1196:5:4",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1203:3:4",
										"type": ""
									}
								],
								"src": "1131:155:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1357:53:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1374:3:4"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1397:5:4"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1379:17:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1379:24:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1367:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1367:37:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1367:37:4"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1345:5:4",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1352:3:4",
										"type": ""
									}
								],
								"src": "1292:118:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1514:124:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1524:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1536:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1547:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1532:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1532:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1524:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1604:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1617:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1628:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1613:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1613:17:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1560:43:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1560:71:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1560:71:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1486:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1498:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1509:4:4",
										"type": ""
									}
								],
								"src": "1416:222:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1810:300:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1820:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1832:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1843:2:4",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1828:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1828:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1820:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1900:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1913:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1924:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1909:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1909:17:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1856:43:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1856:71:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1856:71:4"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "1981:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1994:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2005:2:4",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1990:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "1990:18:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1937:43:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1937:72:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1937:72:4"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "2075:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2088:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2099:2:4",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2084:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "2084:18:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_rational_10000_by_1_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2019:55:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2019:84:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2019:84:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1766:9:4",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "1778:6:4",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1786:6:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1794:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1805:4:4",
										"type": ""
									}
								],
								"src": "1644:466:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2214:124:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2224:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2236:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2247:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2232:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2232:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2224:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2304:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2317:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2328:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2313:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "2313:17:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2260:43:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2260:71:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2260:71:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2186:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2198:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2209:4:4",
										"type": ""
									}
								],
								"src": "2116:222:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2384:35:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2394:19:4",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2410:2:4",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2404:5:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2404:9:4"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2394:6:4"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "2377:6:4",
										"type": ""
									}
								],
								"src": "2344:75:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2470:51:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2480:35:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2509:5:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2491:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2491:24:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2480:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2452:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2462:7:4",
										"type": ""
									}
								],
								"src": "2425:96:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2569:48:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2579:32:4",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2604:5:4"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2597:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "2597:13:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2590:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2590:21:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2579:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2551:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2561:7:4",
										"type": ""
									}
								],
								"src": "2527:90:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2668:81:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2678:65:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2693:5:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2700:42:4",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2689:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2689:54:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2678:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2650:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2660:7:4",
										"type": ""
									}
								],
								"src": "2623:126:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2800:32:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2810:16:4",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2821:5:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2810:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2782:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2792:7:4",
										"type": ""
									}
								],
								"src": "2755:77:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2910:53:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2920:37:4",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2951:5:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2933:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "2933:24:4"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "2920:9:4"
												}
											]
										}
									]
								},
								"name": "convert_t_rational_10000_by_1_to_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2890:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "2900:9:4",
										"type": ""
									}
								],
								"src": "2838:125:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3058:28:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3075:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3078:1:4",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3068:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "3068:12:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3068:12:4"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2969:117:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3181:28:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3198:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3201:1:4",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3191:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "3191:12:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3191:12:4"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "3092:117:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3255:76:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3309:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3318:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3321:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3311:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "3311:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3311:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3278:5:4"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3300:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3285:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:21:4"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3275:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "3275:32:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3268:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "3268:40:4"
											},
											"nodeType": "YulIf",
											"src": "3265:60:4"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3248:5:4",
										"type": ""
									}
								],
								"src": "3215:116:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3380:79:4",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3437:16:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3446:1:4",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3449:1:4",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3439:6:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "3439:12:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3439:12:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3403:5:4"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3428:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3410:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:24:4"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3400:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "3400:35:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3393:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "3393:43:4"
											},
											"nodeType": "YulIf",
											"src": "3390:63:4"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3373:5:4",
										"type": ""
									}
								],
								"src": "3337:122:4"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_rational_10000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_10000_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_10000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 4,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80632762efb51461003b5780638a4068dd14610059575b600080fd5b610043610063565b60405161005091906102df565b60405180910390f35b610061610114565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100bf919061028d565b60206040518083038186803b1580156100d757600080fd5b505afa1580156100eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010f9190610233565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33734b20993bc481177ec7e8f571cecae8a9e22c02db6127106040518463ffffffff1660e01b8152600401610187939291906102a8565b602060405180830381600087803b1580156101a157600080fd5b505af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d99190610206565b50565b6000815190506101eb81610359565b92915050565b60008151905061020081610370565b92915050565b60006020828403121561021c5761021b610354565b5b600061022a848285016101dc565b91505092915050565b60006020828403121561024957610248610354565b5b6000610257848285016101f1565b91505092915050565b610269816102fa565b82525050565b61027881610342565b82525050565b61028781610338565b82525050565b60006020820190506102a26000830184610260565b92915050565b60006060820190506102bd6000830186610260565b6102ca6020830185610260565b6102d7604083018461026f565b949350505050565b60006020820190506102f4600083018461027e565b92915050565b600061030582610318565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061034d82610338565b9050919050565b600080fd5b6103628161030c565b811461036d57600080fd5b50565b61037981610338565b811461038457600080fd5b5056fea264697066735822122039a311c6a85ad9224ede5ac5398ac8c874598b86b9632715f698914060f6ffb164736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2762EFB5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH2 0x2710 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x206 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x354 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP5 DUP3 DUP6 ADD PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x354 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x287 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x362 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LOG3 GT 0xC6 0xA8 GAS 0xD9 0x22 0x4E 0xDE GAS 0xC5 CODECOPY DUP11 0xC8 0xC8 PUSH21 0x598B86B9632715F698914060F6FFB164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "182:335:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:124;;;:::i;:::-;;287:98;326:4;349;;;;;;;;;;;:14;;;372:4;349:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;342:36;;287:98;:::o;391:124::-;428:4;;;;;;;;;;:17;;;446:10;458:42;502:5;428:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;391:124::o;7:137:4:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:143::-;207:5;238:6;232:13;223:22;;254:33;281:5;254:33;:::i;:::-;150:143;;;;:::o;299:345::-;366:6;415:2;403:9;394:7;390:23;386:32;383:119;;;421:79;;:::i;:::-;383:119;541:1;566:61;619:7;610:6;599:9;595:22;566:61;:::i;:::-;556:71;;512:125;299:345;;;;:::o;650:351::-;720:6;769:2;757:9;748:7;744:23;740:32;737:119;;;775:79;;:::i;:::-;737:119;895:1;920:64;976:7;967:6;956:9;952:22;920:64;:::i;:::-;910:74;;866:128;650:351;;;;:::o;1007:118::-;1094:24;1112:5;1094:24;:::i;:::-;1089:3;1082:37;1007:118;;:::o;1131:155::-;1230:49;1273:5;1230:49;:::i;:::-;1225:3;1218:62;1131:155;;:::o;1292:118::-;1379:24;1397:5;1379:24;:::i;:::-;1374:3;1367:37;1292:118;;:::o;1416:222::-;1509:4;1547:2;1536:9;1532:18;1524:26;;1560:71;1628:1;1617:9;1613:17;1604:6;1560:71;:::i;:::-;1416:222;;;;:::o;1644:466::-;1805:4;1843:2;1832:9;1828:18;1820:26;;1856:71;1924:1;1913:9;1909:17;1900:6;1856:71;:::i;:::-;1937:72;2005:2;1994:9;1990:18;1981:6;1937:72;:::i;:::-;2019:84;2099:2;2088:9;2084:18;2075:6;2019:84;:::i;:::-;1644:466;;;;;;:::o;2116:222::-;2209:4;2247:2;2236:9;2232:18;2224:26;;2260:71;2328:1;2317:9;2313:17;2304:6;2260:71;:::i;:::-;2116:222;;;;:::o;2425:96::-;2462:7;2491:24;2509:5;2491:24;:::i;:::-;2480:35;;2425:96;;;:::o;2527:90::-;2561:7;2604:5;2597:13;2590:21;2579:32;;2527:90;;;:::o;2623:126::-;2660:7;2700:42;2693:5;2689:54;2678:65;;2623:126;;;:::o;2755:77::-;2792:7;2821:5;2810:16;;2755:77;;;:::o;2838:125::-;2900:9;2933:24;2951:5;2933:24;:::i;:::-;2920:37;;2838:125;;;:::o;3092:117::-;3201:1;3198;3191:12;3215:116;3285:21;3300:5;3285:21;:::i;:::-;3278:5;3275:32;3265:60;;3321:1;3318;3311:12;3265:60;3215:116;:::o;3337:122::-;3410:24;3428:5;3410:24;:::i;:::-;3403:5;3400:35;3390:63;;3449:1;3446;3439:12;3390:63;3337:122;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "191400",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"getCoin()": "infinite",
				"transfer()": "infinite"
			}
		},
		"methodIdentifiers": {
			"getCoin()": "2762efb5",
			"transfer()": "8a4068dd"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "contract IERC20",
					"name": "_coin",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "getCoin",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "transfer",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}